// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>
#include <DHT.h>  // Include the DHT library

// Wi-Fi credentials
const char DEVICE_LOGIN_NAME[]  = "0ad76641-657a-4a08-8d10-aa7da2c5545c";  // Change to your actual device login name
const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]         = SECRET_DEVICE_KEY;    // Secret device password

// DHT11 sensor settings
#define DHTPIN1 D4              // DHT11 Data pin connected to D4 (GPIO2)
#define DHTTYPE DHT11           // DHT11 sensor type
DHT dht1(DHTPIN1, DHTTYPE);     // Initialize DHT sensor

// Cloud variables
CloudTemperatureSensor temperature;
CloudRelativeHumidity humidity;

// Initialize IoT properties
void initProperties() {
  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  
  ArduinoCloud.addProperty(temperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(humidity, READ, ON_CHANGE, NULL);
}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);

void setup() {
  Serial.begin(9600);  // Initialize serial communication

  // Initialize the DHT sensor
  dht1.begin();

  // Initialize Wi-Fi and cloud connection
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  Serial.print("Connecting to WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi. IP address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  ArduinoCloud.update();  // Ensure cloud properties are updated

  // Read temperature and humidity from the DHT11 sensor
  float temp = dht1.readTemperature();
  float hum = dht1.readHumidity();

  // Check if readings from the sensor are valid
  if (!isnan(temp) && !isnan(hum)) {
    // Update cloud variables for the sensor
    temperature = temp;  // Update cloud temperature
    humidity = hum;      // Update cloud humidity
  } else {
    Serial.println("Failed to read from DHT sensor!");
  }

  delay(2000);  // Wait for 2 seconds before the next reading
}
